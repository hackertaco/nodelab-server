type Study {
    id: ID!
    state: String!
    title: String!
    imgUrl: String
    category: String!
    startDay: String!
    endDay: String!
    peopleLimit: Int
    division:String!
    deletedAt: String!
    introductionTitle: String!
    introductionContent: String!
}
type Tag {
    id: ID!
    name: String!
}

type StudyTag {
    id: ID!
    study: Study
    tag: Tag

}

type UserStudy {
    id: ID!
    study: Study
    user: User
    requestStatus: String!
    position: String!
    interest: [String!]!
    introduction: String!
    deletedAt: String!
}
type GetAllStudyDto {
    id: ID!
    title: String!
    imgUrl: String
    category: String!
    peopleLimit: Int
    division:String!
    studyTag: [StudyTag]
    isBookmarked: Boolean!
    studyInqueryCount: Int!
    applicationCount: Int!
}
type Query {
    getAllStudy: [Study]
    getAStudy(id:ID!):Study
    getAllStudyByStartDay(id:ID!):[GetAllStudyDto]
}

type Mutation {
    createStudy(input: CreateStudyInput!, userId: ID!): Study
    createInquiry(input: InquiryCreateDTO!, userId: ID!, studyId: ID!): StudyInquiry
    applyStudy(input: ApplyUserStudyInput, userId: ID!, studyId: ID!): UserStudy
}

input CreateStudyInput {
    title: String!
    imgUrl: String
    category: String!
    startDay: String!
    endDay: String!
    peopleLimit: Int!
    division: String!
    introductionTitle: String!
    introductionContent: String!
    postTitle: String
    postContent: String
}

input ApplyUserStudyInput {
    position:String!
    interest: [String!]
    introduction: String!
}
